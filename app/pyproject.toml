[tool.poetry]
name = "taskforce"
version = "0.1.0"
description = ""
authors = ["Uria Franko <uriafranco@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.10,<3.12"
crewai = "^0.11.2"
langchain = "^0.1.8"
pydantic = "^2.6.1"
unstructured = "^0.12.4"
exa-py = "^1.0.8"
sec-api = "^1.0.17"
langchain-community = "^0.0.21"
load-dotenv = "^0.1.0"
yfinance = "^0.2.36"
faiss-cpu = "^1.7.4"
pytest-emoji = "^0.2.0"

[tool.poetry.group.dev.dependencies]
ruff = "^0.2.2"
black = "^24.2.0"
pre-commit = "^3.6.2"
pytest = "^8.0.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.ruff]
line-length = 99
indent-width = 4

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]

ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "W191",  # indentation contains tabs
]
target-version = "py310"


[tool.ruff.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true

[tool.ruff.lint]

select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
fixable = ["ALL"]
unfixable = []
ignore = []


[tool.ruff.format]
quote-style = "double"
# docstring-code-format = true
line-ending = "auto"
skip-magic-trailing-comma = false


[tool.pytest.ini_options]
addopts = "--ignore=.venv/*"
norecursedirs = ".venv"  # This tells pytest not to enter these directories during collection
filterwarnings = [
    "ignore::Warning" # Too many warning from packages
]
